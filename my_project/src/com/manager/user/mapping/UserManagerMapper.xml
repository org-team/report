<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manager.user.dao.UserManagerMapper">
	
	<!-- 用户管理模块 -->
	<!-- 用户详细信息_分页 -->
	<select id="selectUserInfo_paging" resultType="Map" parameterType="com.manager.user.po.UserDetail">
		SELECT
			C.USER_ID,
			C.USER_NAME,
			P.NICK_NAME,
			(CASE P.SEX
			WHEN '1' THEN '男'
			WHEN '2' THEN '女'
			ELSE '其他' END) SEX,
			P.EMAIL,
			P.PHONE,
			DATE_FORMAT(P.CREATE_TIME,'%Y-%m-%d %H:%i:%s') CREATE_TIME,
			R.ROLE_NAME
		FROM
			t_yc_user C
				LEFT JOIN t_yc_profile P ON P.USER_ID=C.USER_ID
				LEFT JOIN t_yc_role R ON R.ROLE_ID=P.ROLE_ID
		<where> C.VALID=1 
	        <if test=" null != userName and '' != userName">  
	            AND C.USER_NAME=#{userName}
	        </if>  
	        <if test=" null != phone and '' != phone">  
	            AND P.PHONE=#{phone}
	        </if>  
			<if test=" null != roleName and '' != roleName">  
	            AND R.ROLE_NAME=#{roleName}
	        </if>  
	        <if test=" null != roleId and '' != roleId">  
	            AND R.ROLE_ID=#{roleId}
	        </if>
	    </where> 
	    ORDER BY P.CREATE_TIME DESC
	</select>
	
	<!-- 后台手动添加用户 -->
	<insert id="insertUser_1" parameterType="com.manager.user.po.UserDetail">  
	    INSERT INTO t_yc_user (user_id,user_name,password,valid,type) VALUES(#{userId},#{userName},#{password},1,1)
	</insert>  
	<insert id="insertUser_2" parameterType="com.manager.user.po.UserDetail">  
		INSERT INTO t_yc_profile (
			user_id,
			nick_name,
			role_id,
			sex,
			age,
			phone,
			email,
			verson,
			create_time,
			update_time)
		VALUES
			(#{userId},#{nickName},#{roleId},#{sex},#{age},#{phone},#{email},1,sysdate(),sysdate())
	</insert>  
	
	<!-- 用户登录名去重 -->
	<select id="isExistUserName" parameterType="String" resultType="Integer">
		SELECT COUNT(c.user_name) user_name FROM t_yc_user c WHERE c.user_name=#{userName};
	</select>
	
	<!-- 删除用户 -->
	<update id="deleteUserByuserId" parameterType="String">
		UPDATE t_yc_user c SET c.valid=2 WHERE c.user_id=#{userId}
	</update>
	
	<!-- 设置用户权限 -->
	<update id="updateRoleByUserId" parameterType="com.manager.user.po.UserDetail">
		update t_yc_profile c set c.role_id=#{roleId} where c.user_id=#{userId}
	</update>
	
	<!-- 回显权限分类 -->
	<select id="showRoleList" resultType="Map">
		select c.ROLE_ID,c.ROLE_NAME from t_yc_role c where c.valid=1
	</select>

</mapper>